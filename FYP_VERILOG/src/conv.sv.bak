module conv_one 
#(
parameter k_size = 5,
parameter width = 28,
parameter height = 28,
parameter padding = 2,
parameter stride = 1
)
(
input clk,rst,
input [15:0] kernel [0:k_size-1] [0:k_size-1],
input [15:0] in [0:height+padding+padding-1] [0:width+padding+padding-1],
output reg [15:0] out [0:(height+padding+padding-k_size)/stride][0:(width+padding+padding-k_size)/stride]
);
integer cnt;

always @(posedge clk or posedge rst) begin 
if (rst == 1'b1) cnt =0;
else if(cnt < ((height+padding+padding-k_size)/stride+1)) cnt = cnt+1;
end

genvar i;
generate 
    for (i=0;i<((width+padding+padding-k_size)/stride+1);i=i+1) begin 
        convunit 
        #(
        .k_size(k_size)
        )
        (
	.in (in[cnt +: k_size] [i +: k_size]),
        .kernel(kernel),
        .out (out[cnt][i])
        );
    end
endgenerate
endmodule