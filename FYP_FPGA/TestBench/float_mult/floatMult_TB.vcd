$date
	Tue May 21 09:26:30 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module floatMult_TB $end
$var wire 16 ! product [15:0] $end
$var reg 16 " floatA [15:0] $end
$var reg 16 # floatB [15:0] $end
$scope module FM $end
$var wire 16 $ floatA [15:0] $end
$var wire 16 % floatB [15:0] $end
$var reg 6 & exponent [5:0] $end
$var reg 22 ' fraction [21:0] $end
$var reg 11 ( fractionA [10:0] $end
$var reg 11 ) fractionB [10:0] $end
$var reg 10 * mantissa [9:0] $end
$var reg 16 + product [15:0] $end
$var reg 1 , sign $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0,
b11010000011000 +
b11000 *
b10110100001 )
b10111010010 (
b11000011000100100 '
b1101 &
b11010110100001 %
b11100111010010 $
b11010110100001 #
b11100111010010 "
b11010000011000 !
$end
#1000
b0 !
b0 +
b0 #
b0 %
b11010110100001 "
b11010110100001 $
#2000
b11100111010010 #
b11100111010010 %
b0 "
b0 $
#3000
b1110000010001011 !
b1110000010001011 +
b10001011 *
b10001011101000110000 '
b11111010110 )
b10010100100 (
b11000 &
1,
b100101111010110 #
b100101111010110 %
b1101000010100100 "
b1101000010100100 $
#4000
